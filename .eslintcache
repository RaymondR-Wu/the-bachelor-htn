[{"/Users/raymondwu/Documents/hackthenorth/src/reportWebVitals.js":"1","/Users/raymondwu/Documents/hackthenorth/src/App.js":"2","/Users/raymondwu/Documents/hackthenorth/src/index.js":"3","/Users/raymondwu/Documents/hackthenorth/src/Login.js":"4","/Users/raymondwu/Documents/hackthenorth/src/UserProfile.js":"5"},{"size":362,"mtime":1610777680606,"results":"6","hashOfConfig":"7"},{"size":996,"mtime":1610820381546,"results":"8","hashOfConfig":"7"},{"size":547,"mtime":1610779056642,"results":"9","hashOfConfig":"7"},{"size":8177,"mtime":1610820337621,"results":"10","hashOfConfig":"7"},{"size":3983,"mtime":1610827850869,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"5la4ry",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/raymondwu/Documents/hackthenorth/src/reportWebVitals.js",[],["25","26"],"/Users/raymondwu/Documents/hackthenorth/src/App.js",["27"],"/Users/raymondwu/Documents/hackthenorth/src/index.js",[],["28","29"],"/Users/raymondwu/Documents/hackthenorth/src/Login.js",["30"],"import React from 'react';\nimport './Login.css';\nimport { Button, Form, Modal, Col } from 'react-bootstrap';\nimport axios from 'axios';\n\nexport default class Login extends React.Component{\n    constructor(props){\n        super(props);\n\n        this._enums = { Registration: 1, Login: 2}\n\n        this.state = {\n            activeView: this._enums.Login,\n            modalActive: false,\n            email: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            confirmPassword: '',\n            username: '',\n            phone: ''\n        }\n    }\n\n    toggleModal = (activeView) => {\n        this.setState({\n            modalActive: !this.state.modalActive,\n            activeView\n        });\n    }\n\n    toggleView = () => {\n        this.setState({\n            activeView: this.state.activeView%2 + 1\n        })\n    }\n\n    handleChange = (field, e) => {\n        this.setState({\n            [field]: e.target.value\n        })\n    }\n    \n    sendRegistration = () => {\n        let data = {\n            'firstName': this.state.firstName,\n            'lastName': this.state.lastName,\n            'password': this.state.password,\n            'username': this.state.username,\n            'phone': this.state.phone,\n            'email': this.state.email\n        }\n        \n        axios({\n            url: \"http://localhost:8000/users/register\",\n            method: \"POST\",\n            data: data\n        }).then((response) => {\n            localStorage.setItem('userDetails', JSON.stringify(response.data));\n            this.setState({\n                modalActive: false\n            }, () => {this.props.switchPage('profile')});\n        }).catch((err) => {\n            alert('try again buddy');\n        })\n    }\n\n    sendLogin = () => {\n        let data = {\n            'email': this.state.email,\n            'password': this.state.password,\n        }\n\n        axios({\n            url: \"http://localhost:8000/users/login\",\n            method: \"POST\",\n            data: data\n        }).then((response) => {\n            localStorage.setItem('userDetails', JSON.stringify(response.data));\n            this.setState({\n                modalActive: false\n            }, () => {\n                this.props.switchPage('userProfile');\n            });\n        }).catch((err) => {\n            console.log(\"BRUH\");\n            alert('nope not allowed in');\n        })\n    }\n\n    renderForm = () => {\n        if(this.state.activeView === this._enums.Registration){\n            return(\n                <Form>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formFirstName\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control value={this.state.firstName} onChange={(e) => this.handleChange('firstName', e)} placeholder = \"Enter name\" />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formLastName\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control value={this.state.lastName} onChange={(e) => this.handleChange('lastName', e)} placeholder = \"Enter name\" />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control value={this.state.email} onChange={(e) => this.handleChange('email', e)} type=\"email\" placeholder = \"Enter email\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control value={this.state.password} onChange={(e) => this.handleChange('password', e)} type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupConfirmPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control value={this.state.confirmPassword} onChange={(e) => this.handleChange('confirmPassword', e)} type=\"password\" placeholder=\"Confirm Password\" />\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formUsername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control value={this.state.username} onChange={(e) => this.handleChange('username', e)} placeholder = \"Username\" />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formPhone\">\n                            <Form.Label>Phone Number</Form.Label>\n                            <Form.Control value={this.state.phone} onChange={(e) => this.handleChange('phone', e)} placeholder = \"(613)-123-4567\" />\n                        </Form.Group>\n                    </Form.Row>\n                </Form>\n            )\n        } else{\n            return (\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control value={this.state.email} onChange={(e) => this.handleChange('email', e)} type=\"email\" placeholder = \"Enter email\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control value={this.state.password} onChange={(e) => this.handleChange('password', e)} type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                </Form>\n            )\n        }\n    }\n\n    render(){\n        if(!this.props.active) return null;\n        return(\n            <div className=\"login-container\">\n                <div className=\"login-header\">\n                    <p className=\"title\">The Pit</p>\n                    <Button onClick={() => this.toggleModal(this._enums.Login)} variant=\"secondary\">Log In</Button>\n                </div>\n                <div className=\"login-body\">\n                    <p className=\"title\">Get Your Bachelor Experience Today.</p>\n                    <br></br>\n                    <Button onClick={() => this.toggleModal(this._enums.Registration)} variant=\"primary\"> I'm \"single\" and ready to mingle.</Button>\n                </div>\n                <Modal centered show={this.state.modalActive} onHide={this.toggleModal}>\n                    <Modal.Body centered>\n                        <div style={{padding:\"2rem\"}}>\n                            <div style={{display:\"flex\", justifyContent: \"center\"}}>\n                                <p className=\"title\" style={{fontSize:\"2rem\"}}>\n                                    {this.state.activeView == this._enums.Registration ? 'Create Account' : 'Log In'}\n                                </p>\n                            </div>\n                            <br></br>\n                            {this.renderForm()}\n                            \n                            <div style={{display:\"flex\", flexDirection:\"column\", alignItems:\"center\", justifyContent: \"center\"}}>\n                                <Button \n                                    style={{maxWidth: '100vw', marginBottom: \"0.5rem\"}} \n                                    onClick={this.state.activeView - 1 ? this.sendLogin : this.sendRegistration} \n                                    variant=\"primary\"\n                                > \n                                    Become a Bachelor \n                                </Button>\n                                <div style={{display: \"flex\", flexDirection:\"row\"}}>\n                                    <p>{this.state.activeView - 1 ? 'Not yet a Bachelor?': 'Already a Bachelor?'} </p>&nbsp;\n                                    <p onClick={this.toggleView} className=\"clickable-words\"> {this.state.activeView -1 ? 'Register Now.' : 'Log In Here.'} </p>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            </div>\n        )\n    }\n}\n","/Users/raymondwu/Documents/hackthenorth/src/UserProfile.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":16},{"ruleId":"31","replacedBy":"39"},{"ruleId":"33","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":165,"column":60,"nodeType":"43","messageId":"44","endLine":165,"endColumn":62},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["45"],["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]